<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activeLabelString" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="badTreeNodeTagWarningString" xml:space="preserve">
    <value>Warning: Got node with unrecognised Tag of: </value>
  </data>
  <data name="clockMaxLabelString" xml:space="preserve">
    <value>Clock Max</value>
  </data>
  <data name="clockMaxWarningString" xml:space="preserve">
    <value>Warning: Clock max MS must be an integer between 30 and 100.</value>
  </data>
  <data name="clockTickLabelString" xml:space="preserve">
    <value>Clock Tick (Milliseconds)</value>
  </data>
  <data name="clockTickWarningString" xml:space="preserve">
    <value>Warning: Clock tick must be a positive integer value specified in milliseconds.</value>
  </data>
  <data name="configDirCreationFailedString" xml:space="preserve">
    <value>Error: Configs directory creation failed - please manually create a directory called \"Configs\" in the same folder as the SoniFight executable.</value>
  </data>
  <data name="continuousTriggerIdLabelString" xml:space="preserve">
    <value>Continuous Trigger ID</value>
  </data>
  <data name="deleteWatchButtonString" xml:space="preserve">
    <value>Delete Watch</value>
  </data>
  <data name="dependentTriggerIdLabelString" xml:space="preserve">
    <value>Dependent Trigger ID</value>
  </data>
  <data name="descriptionLabelString" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="deserialiseFailString1" xml:space="preserve">
    <value>Error: Deserialising gameconfig from </value>
  </data>
  <data name="deserialiseFailString2" xml:space="preserve">
    <value> has failed. Aborting.</value>
  </data>
  <data name="directoryLabelString" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="gameConfigMainUILabelString" xml:space="preserve">
    <value>GameConfig General Settings</value>
  </data>
  <data name="gameConfigString" xml:space="preserve">
    <value>Game Config</value>
  </data>
  <data name="gameConfigTagString" xml:space="preserve">
    <value>GameConfig</value>
  </data>
  <data name="illegalPointerString1" xml:space="preserve">
    <value>Illegal Pointer Value </value>
  </data>
  <data name="illegalPointerString2" xml:space="preserve">
    <value> in watch with id </value>
  </data>
  <data name="illegalPointerString3" xml:space="preserve">
    <value> cannot be cast to int. Do not prefix pointer hops with 0x or such.</value>
  </data>
  <data name="missingConfigDirString" xml:space="preserve">
    <value>Error: Configs directory does not exist in same folder as SoniFight executable - click OK to create folder.</value>
  </data>
  <data name="noConfigsFoundString" xml:space="preserve">
    <value>No configs found in Configs directory!</value>
  </data>
  <data name="noneString" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="pointerListLabelString" xml:space="preserve">
    <value>Pointer Chain (comma-separated hex, no prefixes)</value>
  </data>
  <data name="pollSleepLabelString" xml:space="preserve">
    <value>Poll Sleep (Milliseconds)</value>
  </data>
  <data name="pollSleepWarningString" xml:space="preserve">
    <value>Warning: Poll sleep must be a positive integer value specified in milliseconds.</value>
  </data>
  <data name="processNameLabelString" xml:space="preserve">
    <value>Process Name</value>
  </data>
  <data name="sonificationStoppedString" xml:space="preserve">
    <value>Sonification stopped.</value>
  </data>
  <data name="statusRunningString" xml:space="preserve">
    <value>Status: Running. Config:</value>
  </data>
  <data name="statusStoppedString" xml:space="preserve">
    <value>Status: Stopped</value>
  </data>
  <data name="triggerDescriptionLabelString" xml:space="preserve">
    <value>Trigger Description</value>
  </data>
  <data name="triggerDescriptionString1" xml:space="preserve">
    <value>A trigger is a condition which can activate a sonification event when that trigger condition is met.</value>
  </data>
  <data name="triggerDescriptionString2" xml:space="preserve">
    <value>Triggers use watches, as identified by their numeric ID values, to read data and compare that data to certain conditions.</value>
  </data>
  <data name="triggerDescriptionString3" xml:space="preserve">
    <value>Each trigger must have a unique trigger ID specified as an integer greater than or equal to zero, and a condition to match against.</value>
  </data>
  <data name="triggerDescriptionString4" xml:space="preserve">
    <value>Please consult the user documentation to learn more about how to set and use triggers.</value>
  </data>
  <data name="triggerIdLabelString" xml:space="preserve">
    <value>Trigger ID (unique int zero or greater)</value>
  </data>
  <data name="triggerIdWarningString" xml:space="preserve">
    <value>Warning: Trigger ID must be an integer value.</value>
  </data>
  <data name="triggerNameLabelString" xml:space="preserve">
    <value>Trigger Name</value>
  </data>
  <data name="triggerSettingsLabelString" xml:space="preserve">
    <value>Trigger Settings</value>
  </data>
  <data name="triggersString" xml:space="preserve">
    <value>Triggers</value>
  </data>
  <data name="triggersUsingThisWatchLabelString" xml:space="preserve">
    <value>Triggers Using This Watch</value>
  </data>
  <data name="triggerTypeLabelString" xml:space="preserve">
    <value>Trigger Type</value>
  </data>
  <data name="validationFailedString" xml:space="preserve">
    <value>Validation failed! GameConfig not saved.</value>
  </data>
  <data name="valueTypeLabelString" xml:space="preserve">
    <value>Value Type</value>
  </data>
  <data name="watch2IdLabelString" xml:space="preserve">
    <value>Watch 2 ID</value>
  </data>
  <data name="watchDescriptionLabelString" xml:space="preserve">
    <value>Watch Description</value>
  </data>
  <data name="watchDescriptionString1" xml:space="preserve">
    <value>A watch is a memory location expressed as a pointer chain leading to the address of a value of interest, and the type of data to read from that memory address.</value>
  </data>
  <data name="watchDescriptionString2" xml:space="preserve">
    <value>Each watch must have a unique watch ID specified as an integer greater than or equal to zero, and may optionally have a name and description.</value>
  </data>
  <data name="watchDescriptionString3" xml:space="preserve">
    <value>Only watches that are marked as active will be used - this allows you to disable a watch while still keeping the data around in your GameConfig for later use, if you wish.</value>
  </data>
  <data name="watchDescriptionString4" xml:space="preserve">
    <value>Please consult the user documentation for further details on identifying pointer trails for use in watches.</value>
  </data>
  <data name="watchesString" xml:space="preserve">
    <value>Watches</value>
  </data>
  <data name="watchIdLabelString" xml:space="preserve">
    <value>Watch ID (unique int zero or greater)</value>
  </data>
  <data name="watchIdWarningString" xml:space="preserve">
    <value>Warning: Watch ID must be an integer value.</value>
  </data>
  <data name="watchNameLabelString" xml:space="preserve">
    <value>Watch Name</value>
  </data>
  <data name="watchSettingsLabelString" xml:space="preserve">
    <value>Watch Settings</value>
  </data>
  <data name="watchString" xml:space="preserve">
    <value>Watch</value>
  </data>
  <data name="addTriggerLabelString" xml:space="preserve">
    <value>Add Trigger</value>
  </data>
  <data name="addWatchLabelString" xml:space="preserve">
    <value>Add Watch</value>
  </data>
  <data name="allowanceTypeLabelString" xml:space="preserve">
    <value>Allowance Type</value>
  </data>
  <data name="changeMeString" xml:space="preserve">
    <value>CHANGE ME</value>
  </data>
  <data name="cloneTriggerLabelString" xml:space="preserve">
    <value>Clone Trigger</value>
  </data>
  <data name="cloneWatchLabelString" xml:space="preserve">
    <value>Clone Watch</value>
  </data>
  <data name="cloneWatchWarningString" xml:space="preserve">
    <value>You must select a watch before opting to clone that watch.</value>
  </data>
  <data name="comparisonTypeLabelString" xml:space="preserve">
    <value>Comparison Type</value>
  </data>
  <data name="configDirCannotBeBlankString" xml:space="preserve">
    <value>Validation Error: GameConfig directory cannot be blank.</value>
  </data>
  <data name="deleteTriggerButtonString" xml:space="preserve">
    <value>Delete Trigger</value>
  </data>
  <data name="foundProcessBaseAddressString" xml:space="preserve">
    <value>Found process base address at hex address: </value>
  </data>
  <data name="isClockLabelString" xml:space="preserve">
    <value>Is Clock?</value>
  </data>
  <data name="newTriggerString" xml:space="preserve">
    <value>-NEW_TRIGGER</value>
  </data>
  <data name="newWatchString" xml:space="preserve">
    <value>-NEW_WATCH</value>
  </data>
  <data name="processNotFoundWarningString1" xml:space="preserve">
    <value>Error: No process called </value>
  </data>
  <data name="processNotFoundWarningString2" xml:space="preserve">
    <value> found. Activation failed.</value>
  </data>
  <data name="sampleFilenameLabelString" xml:space="preserve">
    <value>Sample Filename (without path)</value>
  </data>
  <data name="sampleSpeedLabelString" xml:space="preserve">
    <value>Sample Speed (Range: 0.1 to 4.0)</value>
  </data>
  <data name="sampleSpeedWarningString1" xml:space="preserve">
    <value>Warning: Sample speed must be a value between </value>
  </data>
  <data name="sampleSpeedWarningString2" xml:space="preserve">
    <value> and </value>
  </data>
  <data name="sampleSpeedWarningString3" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="sampleVolumeLabelString" xml:space="preserve">
    <value>Sample Volume (Range: 0.0 to 1.0)</value>
  </data>
  <data name="sampleVolumeWarningString" xml:space="preserve">
    <value>Warning: Sample volume must be a value between 0.0 and 1.0.</value>
  </data>
  <data name="screenReaderTextLabelString" xml:space="preserve">
    <value>Screen Reader Text</value>
  </data>
  <data name="secondaryIdLabelContinuousTriggerIdString" xml:space="preserve">
    <value>Continuous Trigger ID</value>
  </data>
  <data name="secondaryIdLabelDependentIdString" xml:space="preserve">
    <value>Dependent Trigger ID</value>
  </data>
  <data name="secondaryIdLabelWatch2IdString" xml:space="preserve">
    <value>Watch 2 ID</value>
  </data>
  <data name="secondaryIdWarningString" xml:space="preserve">
    <value>Warning: Secondary ID must be an integer value.</value>
  </data>
  <data name="selectSampleButtonString" xml:space="preserve">
    <value>Select Sample File</value>
  </data>
  <data name="triggerCloneWarningString" xml:space="preserve">
    <value>You must select a trigger before opting to clone that trigger.</value>
  </data>
  <data name="triggerString" xml:space="preserve">
    <value>Trigger</value>
  </data>
  <data name="triggerValueMaxRangeLabelString" xml:space="preserve">
    <value>Trigger Value / Max Range</value>
  </data>
  <data name="useTolkLabelString" xml:space="preserve">
    <value>Use Tolk</value>
  </data>
  <data name="watch1LabelString" xml:space="preserve">
    <value>Watch 1 ID</value>
  </data>
  <data name="allowanceTypeAnyString" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="allowanceTypeInGameString" xml:space="preserve">
    <value>In-Game</value>
  </data>
  <data name="allowanceTypeInMenuString" xml:space="preserve">
    <value>In-Menu</value>
  </data>
  <data name="booleanString" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="changedString" xml:space="preserve">
    <value>Changed</value>
  </data>
  <data name="distancePitchAscendingString" xml:space="preserve">
    <value>Distance Pitch Ascending (Continuous Only)</value>
  </data>
  <data name="distancePitchDescendingString" xml:space="preserve">
    <value>Distance Pitch Descending (Continuous Only)</value>
  </data>
  <data name="distanceVolumeAscendingString" xml:space="preserve">
    <value>Distance Volume Ascending (Continuous Only)</value>
  </data>
  <data name="distanceVolumeDescendingString" xml:space="preserve">
    <value>Distance Volume Descending (Continuous Only)</value>
  </data>
  <data name="doubleString" xml:space="preserve">
    <value>Double</value>
  </data>
  <data name="dynamicTypeComparisonExceptionString" xml:space="preserve">
    <value>Dynamic type comparison exception. Exact error is: </value>
  </data>
  <data name="equalToString" xml:space="preserve">
    <value>Equal To</value>
  </data>
  <data name="failedDepthString" xml:space="preserve">
    <value> failed. Depth: </value>
  </data>
  <data name="floatString" xml:space="preserve">
    <value>Float</value>
  </data>
  <data name="greaterThanOrEqualToString" xml:space="preserve">
    <value>Greater Than Or Equal To</value>
  </data>
  <data name="greaterThanString" xml:space="preserve">
    <value>Greater Than</value>
  </data>
  <data name="inGameSampleString" xml:space="preserve">
    <value>InGame Sample: </value>
  </data>
  <data name="inMenuSampleString" xml:space="preserve">
    <value>InMenu Sample: </value>
  </data>
  <data name="integerString" xml:space="preserve">
    <value>Integer</value>
  </data>
  <data name="lessThanOrEqualToString" xml:space="preserve">
    <value>Less Than Or Equal To</value>
  </data>
  <data name="lessThanString" xml:space="preserve">
    <value>Less Than</value>
  </data>
  <data name="longString" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="notEqualToString" xml:space="preserve">
    <value>Not Equal To</value>
  </data>
  <data name="shortString" xml:space="preserve">
    <value>Short</value>
  </data>
  <data name="speedString" xml:space="preserve">
    <value>, Speed: </value>
  </data>
  <data name="stringUTF16String" xml:space="preserve">
    <value>String (UTF-16)</value>
  </data>
  <data name="stringUTF8String" xml:space="preserve">
    <value>String (UTF-8)</value>
  </data>
  <data name="suppressedAsDependentString" xml:space="preserve">
    <value> suppressed as dependent trigger </value>
  </data>
  <data name="suppressedGameStateChangeString" xml:space="preserve">
    <value>Suppressed moving to InGame state because clock is 0 or </value>
  </data>
  <data name="tolkActiveString" xml:space="preserve">
    <value>Tolk: The active screen reader driver is: </value>
  </data>
  <data name="tolkBrailleSupportedString" xml:space="preserve">
    <value>Tolk: This screen reader driver supports braille.</value>
  </data>
  <data name="tolkNoScreenReaderFoundString" xml:space="preserve">
    <value>Tolk: None of the supported screen readers are running.</value>
  </data>
  <data name="tolkSpeechSupportedString" xml:space="preserve">
    <value>Tolk: This screen reader driver supports speech.</value>
  </data>
  <data name="triggerIdString" xml:space="preserve">
    <value>, Trigger ID: </value>
  </data>
  <data name="triggerTypeContinuousString" xml:space="preserve">
    <value>Continuous</value>
  </data>
  <data name="triggerTypeModifierString" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="triggerTypeNormalString" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="triggerWithTrailingSpaceString" xml:space="preserve">
    <value>Trigger </value>
  </data>
  <data name="validatingGameConfigString" xml:space="preserve">
    <value>--- Validating GameConfig ---</value>
  </data>
  <data name="volumeString" xml:space="preserve">
    <value>, Volume: </value>
  </data>
  <data name="cloneString" xml:space="preserve">
    <value>-CLONE</value>
  </data>
  <data name="deserialiseFailedString" xml:space="preserve">
    <value>Could not deserialize config from XML file: </value>
  </data>
  <data name="fileSavedSuccessfullyString" xml:space="preserve">
    <value>GameConfig saved successfully: </value>
  </data>
  <data name="fileSaveFailedString" xml:space="preserve">
    <value>Could not serialize GameConfig to XML: </value>
  </data>
  <data name="keyNotFoundString" xml:space="preserve">
    <value>WARNING - Sample key not found in dictionary: </value>
  </data>
  <data name="sampleNotFoundString" xml:space="preserve">
    <value>WARNING - Sample not found: </value>
  </data>
  <data name="unrecognisedValueTypeWarningString" xml:space="preserve">
    <value>Unrecognised ValueType in getDynamicValueFromType method: </value>
  </data>
  <data name="isAnythingPlayingExceptionString" xml:space="preserve">
    <value>Exception during IsAnythingPlaying check: </value>
  </data>
  <data name="normalSampleNullSoundWarningString" xml:space="preserve">
    <value>Playing normal sample gave us a null sound for: </value>
  </data>
  <data name="playingQueuedTriggerString" xml:space="preserve">
    <value>Playing Queued Trigger </value>
  </data>
  <data name="playingTriggerString" xml:space="preserve">
    <value>Playing Trigger </value>
  </data>
  <data name="queuingTriggerString" xml:space="preserve">
    <value>Queuing Trigger </value>
  </data>
  <data name="loadingContinuousSampleString" xml:space="preserve">
    <value>Loading continuous sample: </value>
  </data>
  <data name="loadingMenuSampleString" xml:space="preserve">
    <value>Loading menu sample: </value>
  </data>
  <data name="loadingNormalSampleString" xml:space="preserve">
    <value>Loading normal sample: </value>
  </data>
  <data name="loadModifierSampleWarningString" xml:space="preserve">
    <value>WARNING: Aborting attempt to load sample for modifier trigger, and modifier triggers don't use samples.</value>
  </data>
  <data name="nullSoundInQueuedSampleWarningString" xml:space="preserve">
    <value>Playing queued normal sample gave us a null sound for: </value>
  </data>
  <data name="skippingInactiveTriggerSampleString" xml:space="preserve">
    <value>Skipping sample load for inactive trigger: </value>
  </data>
  <data name="skippingTolkSampleLoadString" xml:space="preserve">
    <value>Skipping sample load for tolk trigger: </value>
  </data>
  <data name="triggerSampleStoppedString" xml:space="preserve">
    <value>Trigger sample stopped: </value>
  </data>
  <data name="sayingTolkString" xml:space="preserve">
    <value>Saying tolk string: </value>
  </data>
  <data name="screenReaderNotActiveWarningString" xml:space="preserve">
    <value>WARNING: Tolk output requested but no active screen reader for trigger with ID: </value>
  </data>
  <data name="watchValueParseFailString" xml:space="preserve">
    <value>WARNING: Could not get watch ID from parsing the following to int: </value>
  </data>
  <data name="attemptingToConnectToProcessString" xml:space="preserve">
    <value>Attempting to connect to process: </value>
  </data>
  <data name="continuousTriggerMasterVolumeString" xml:space="preserve">
    <value>Continuous Trigger Master Volume</value>
  </data>
  <data name="continuousTriggerMasterVolumeWarningString" xml:space="preserve">
    <value>WARNING: Continuous trigger master volume must be a value between 0.0 and 1.0</value>
  </data>
  <data name="normalTriggerMasterVolumeString" xml:space="preserve">
    <value>Normal Trigger Master Volume</value>
  </data>
  <data name="normalTriggerMasterVolumeWarningString" xml:space="preserve">
    <value>WARNING: Normal trigger master volume must be a value between 0.0 and 1.0</value>
  </data>
  <data name="noString" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="usesTolkString" xml:space="preserve">
    <value>Uses Tolk</value>
  </data>
  <data name="yesString" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="formatExceptionString" xml:space="preserve">
    <value>WARNING: Pointer chain format exception.</value>
  </data>
  <data name="unsignedIntString" xml:space="preserve">
    <value>Unsigned Integer</value>
  </data>
</root>